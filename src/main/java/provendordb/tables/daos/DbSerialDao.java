/*
 * This file is generated by jOOQ.
*/
package provendordb.tables.daos;


import java.math.BigInteger;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import provendordb.tables.DbSerial;
import provendordb.tables.records.DbSerialRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbSerialDao extends DAOImpl<DbSerialRecord, provendordb.tables.pojos.DbSerial, String> {

    /**
     * Create a new DbSerialDao without any configuration
     */
    public DbSerialDao() {
        super(DbSerial.DB_SERIAL, provendordb.tables.pojos.DbSerial.class);
    }

    /**
     * Create a new DbSerialDao with an attached configuration
     */
    public DbSerialDao(Configuration configuration) {
        super(DbSerial.DB_SERIAL, provendordb.tables.pojos.DbSerial.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(provendordb.tables.pojos.DbSerial object) {
        return object.getName();
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<provendordb.tables.pojos.DbSerial> fetchByName(String... values) {
        return fetch(DbSerial.DB_SERIAL.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public provendordb.tables.pojos.DbSerial fetchOneByName(String value) {
        return fetchOne(DbSerial.DB_SERIAL.NAME, value);
    }

    /**
     * Fetch records that have <code>owner IN (values)</code>
     */

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public List<provendordb.tables.pojos.DbSerial> fetchByOwner(Object... values) {
        return fetch(DbSerial.DB_SERIAL.OWNER, values);
    }

    /**
     * Fetch records that have <code>current_val IN (values)</code>
     */
    public List<provendordb.tables.pojos.DbSerial> fetchByCurrentVal(BigInteger... values) {
        return fetch(DbSerial.DB_SERIAL.CURRENT_VAL, values);
    }

    /**
     * Fetch records that have <code>increment_val IN (values)</code>
     */
    public List<provendordb.tables.pojos.DbSerial> fetchByIncrementVal(BigInteger... values) {
        return fetch(DbSerial.DB_SERIAL.INCREMENT_VAL, values);
    }

    /**
     * Fetch records that have <code>max_val IN (values)</code>
     */
    public List<provendordb.tables.pojos.DbSerial> fetchByMaxVal(BigInteger... values) {
        return fetch(DbSerial.DB_SERIAL.MAX_VAL, values);
    }

    /**
     * Fetch records that have <code>min_val IN (values)</code>
     */
    public List<provendordb.tables.pojos.DbSerial> fetchByMinVal(BigInteger... values) {
        return fetch(DbSerial.DB_SERIAL.MIN_VAL, values);
    }

    /**
     * Fetch records that have <code>cyclic IN (values)</code>
     */
    public List<provendordb.tables.pojos.DbSerial> fetchByCyclic(Integer... values) {
        return fetch(DbSerial.DB_SERIAL.CYCLIC, values);
    }

    /**
     * Fetch records that have <code>started IN (values)</code>
     */
    public List<provendordb.tables.pojos.DbSerial> fetchByStarted(Integer... values) {
        return fetch(DbSerial.DB_SERIAL.STARTED, values);
    }

    /**
     * Fetch records that have <code>class_name IN (values)</code>
     */
    public List<provendordb.tables.pojos.DbSerial> fetchByClassName(String... values) {
        return fetch(DbSerial.DB_SERIAL.CLASS_NAME, values);
    }

    /**
     * Fetch records that have <code>att_name IN (values)</code>
     */
    public List<provendordb.tables.pojos.DbSerial> fetchByAttName(String... values) {
        return fetch(DbSerial.DB_SERIAL.ATT_NAME, values);
    }

    /**
     * Fetch records that have <code>cached_num IN (values)</code>
     */
    public List<provendordb.tables.pojos.DbSerial> fetchByCachedNum(Integer... values) {
        return fetch(DbSerial.DB_SERIAL.CACHED_NUM, values);
    }

    /**
     * Fetch records that have <code>comment IN (values)</code>
     */
    public List<provendordb.tables.pojos.DbSerial> fetchByComment(String... values) {
        return fetch(DbSerial.DB_SERIAL.COMMENT, values);
    }
}
