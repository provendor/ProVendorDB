/*
 * This file is generated by jOOQ.
*/
package provendordb.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import provendordb.tables.Provsalesorder;
import provendordb.tables.records.ProvsalesorderRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProvsalesorderDao extends DAOImpl<ProvsalesorderRecord, provendordb.tables.pojos.Provsalesorder, String> {

    /**
     * Create a new ProvsalesorderDao without any configuration
     */
    public ProvsalesorderDao() {
        super(Provsalesorder.PROVSALESORDER, provendordb.tables.pojos.Provsalesorder.class);
    }

    /**
     * Create a new ProvsalesorderDao with an attached configuration
     */
    public ProvsalesorderDao(Configuration configuration) {
        super(Provsalesorder.PROVSALESORDER, provendordb.tables.pojos.Provsalesorder.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(provendordb.tables.pojos.Provsalesorder object) {
        return object.getProvsalesordernumber();
    }

    /**
     * Fetch records that have <code>provsalesorderid IN (values)</code>
     */
    public List<provendordb.tables.pojos.Provsalesorder> fetchByProvsalesorderid(Integer... values) {
        return fetch(Provsalesorder.PROVSALESORDER.PROVSALESORDERID, values);
    }

    /**
     * Fetch a unique record that has <code>provsalesorderid = value</code>
     */
    public provendordb.tables.pojos.Provsalesorder fetchOneByProvsalesorderid(Integer value) {
        return fetchOne(Provsalesorder.PROVSALESORDER.PROVSALESORDERID, value);
    }

    /**
     * Fetch records that have <code>provsalesordernumber IN (values)</code>
     */
    public List<provendordb.tables.pojos.Provsalesorder> fetchByProvsalesordernumber(String... values) {
        return fetch(Provsalesorder.PROVSALESORDER.PROVSALESORDERNUMBER, values);
    }

    /**
     * Fetch a unique record that has <code>provsalesordernumber = value</code>
     */
    public provendordb.tables.pojos.Provsalesorder fetchOneByProvsalesordernumber(String value) {
        return fetchOne(Provsalesorder.PROVSALESORDER.PROVSALESORDERNUMBER, value);
    }

    /**
     * Fetch records that have <code>provsalesorderamount IN (values)</code>
     */
    public List<provendordb.tables.pojos.Provsalesorder> fetchByProvsalesorderamount(Integer... values) {
        return fetch(Provsalesorder.PROVSALESORDER.PROVSALESORDERAMOUNT, values);
    }

    /**
     * Fetch records that have <code>provsalesordergeoloc IN (values)</code>
     */
    public List<provendordb.tables.pojos.Provsalesorder> fetchByProvsalesordergeoloc(String... values) {
        return fetch(Provsalesorder.PROVSALESORDER.PROVSALESORDERGEOLOC, values);
    }

    /**
     * Fetch records that have <code>provsalesorderaddress IN (values)</code>
     */
    public List<provendordb.tables.pojos.Provsalesorder> fetchByProvsalesorderaddress(String... values) {
        return fetch(Provsalesorder.PROVSALESORDER.PROVSALESORDERADDRESS, values);
    }

    /**
     * Fetch records that have <code>provsalesorderdivision IN (values)</code>
     */
    public List<provendordb.tables.pojos.Provsalesorder> fetchByProvsalesorderdivision(String... values) {
        return fetch(Provsalesorder.PROVSALESORDER.PROVSALESORDERDIVISION, values);
    }

    /**
     * Fetch records that have <code>provsalesorderpaid IN (values)</code>
     */
    public List<provendordb.tables.pojos.Provsalesorder> fetchByProvsalesorderpaid(byte[]... values) {
        return fetch(Provsalesorder.PROVSALESORDER.PROVSALESORDERPAID, values);
    }

    /**
     * Fetch records that have <code>provsalesorderuserid IN (values)</code>
     */
    public List<provendordb.tables.pojos.Provsalesorder> fetchByProvsalesorderuserid(Integer... values) {
        return fetch(Provsalesorder.PROVSALESORDER.PROVSALESORDERUSERID, values);
    }
}
