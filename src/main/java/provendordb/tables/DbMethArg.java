/*
 * This file is generated by jOOQ.
*/
package provendordb.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import provendordb.DefaultSchema;
import provendordb.tables.records.DbMethArgRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbMethArg extends TableImpl<DbMethArgRecord> {

    private static final long serialVersionUID = 1910731332;

    /**
     * The reference instance of <code>db_meth_arg</code>
     */
    public static final DbMethArg DB_METH_ARG = new DbMethArg();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DbMethArgRecord> getRecordType() {
        return DbMethArgRecord.class;
    }

    /**
     * The column <code>db_meth_arg.meth_name</code>.
     */
    public final TableField<DbMethArgRecord, String> METH_NAME = createField("meth_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>db_meth_arg.class_name</code>.
     */
    public final TableField<DbMethArgRecord, String> CLASS_NAME = createField("class_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>db_meth_arg.meth_type</code>.
     */
    public final TableField<DbMethArgRecord, String> METH_TYPE = createField("meth_type", org.jooq.impl.SQLDataType.VARCHAR(8), this, "");

    /**
     * The column <code>db_meth_arg.index_of</code>.
     */
    public final TableField<DbMethArgRecord, Integer> INDEX_OF = createField("index_of", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>db_meth_arg.data_type</code>.
     */
    public final TableField<DbMethArgRecord, String> DATA_TYPE = createField("data_type", org.jooq.impl.SQLDataType.VARCHAR(9), this, "");

    /**
     * The column <code>db_meth_arg.prec</code>.
     */
    public final TableField<DbMethArgRecord, Integer> PREC = createField("prec", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>db_meth_arg.scale</code>.
     */
    public final TableField<DbMethArgRecord, Integer> SCALE = createField("scale", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>db_meth_arg.code_set</code>.
     */
    public final TableField<DbMethArgRecord, Integer> CODE_SET = createField("code_set", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>db_meth_arg.domain_class_name</code>.
     */
    public final TableField<DbMethArgRecord, String> DOMAIN_CLASS_NAME = createField("domain_class_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>db_meth_arg</code> table reference
     */
    public DbMethArg() {
        this(DSL.name("db_meth_arg"), null);
    }

    /**
     * Create an aliased <code>db_meth_arg</code> table reference
     */
    public DbMethArg(String alias) {
        this(DSL.name(alias), DB_METH_ARG);
    }

    /**
     * Create an aliased <code>db_meth_arg</code> table reference
     */
    public DbMethArg(Name alias) {
        this(alias, DB_METH_ARG);
    }

    private DbMethArg(Name alias, Table<DbMethArgRecord> aliased) {
        this(alias, aliased, null);
    }

    private DbMethArg(Name alias, Table<DbMethArgRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbMethArg as(String alias) {
        return new DbMethArg(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbMethArg as(Name alias) {
        return new DbMethArg(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DbMethArg rename(String name) {
        return new DbMethArg(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DbMethArg rename(Name name) {
        return new DbMethArg(name, null);
    }
}
