/*
 * This file is generated by jOOQ.
*/
package provendordb.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import provendordb.DefaultSchema;
import provendordb.tables.records._DbClassRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class _DbClass extends TableImpl<_DbClassRecord> {

    private static final long serialVersionUID = -1686618342;

    /**
     * The reference instance of <code>_db_class</code>
     */
    public static final _DbClass _DB_CLASS = new _DbClass();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<_DbClassRecord> getRecordType() {
        return _DbClassRecord.class;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<_DbClassRecord, Object> CLASS_OF = createField("class_of", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>_db_class.class_name</code>.
     */
    public final TableField<_DbClassRecord, String> CLASS_NAME = createField("class_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>_db_class.class_type</code>.
     */
    public final TableField<_DbClassRecord, Integer> CLASS_TYPE = createField("class_type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>_db_class.is_system_class</code>.
     */
    public final TableField<_DbClassRecord, Integer> IS_SYSTEM_CLASS = createField("is_system_class", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<_DbClassRecord, Object> OWNER = createField("owner", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>_db_class.inst_attr_count</code>.
     */
    public final TableField<_DbClassRecord, Integer> INST_ATTR_COUNT = createField("inst_attr_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>_db_class.class_attr_count</code>.
     */
    public final TableField<_DbClassRecord, Integer> CLASS_ATTR_COUNT = createField("class_attr_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>_db_class.shared_attr_count</code>.
     */
    public final TableField<_DbClassRecord, Integer> SHARED_ATTR_COUNT = createField("shared_attr_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>_db_class.inst_meth_count</code>.
     */
    public final TableField<_DbClassRecord, Integer> INST_METH_COUNT = createField("inst_meth_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>_db_class.class_meth_count</code>.
     */
    public final TableField<_DbClassRecord, Integer> CLASS_METH_COUNT = createField("class_meth_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>_db_class.collation_id</code>.
     */
    public final TableField<_DbClassRecord, Integer> COLLATION_ID = createField("collation_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<_DbClassRecord, Object> SUB_CLASSES = createField("sub_classes", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<_DbClassRecord, Object> SUPER_CLASSES = createField("super_classes", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<_DbClassRecord, Object> INST_ATTRS = createField("inst_attrs", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<_DbClassRecord, Object> CLASS_ATTRS = createField("class_attrs", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<_DbClassRecord, Object> SHARED_ATTRS = createField("shared_attrs", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<_DbClassRecord, Object> INST_METHS = createField("inst_meths", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<_DbClassRecord, Object> CLASS_METHS = createField("class_meths", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<_DbClassRecord, Object> METH_FILES = createField("meth_files", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<_DbClassRecord, Object> QUERY_SPECS = createField("query_specs", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<_DbClassRecord, Object> INDEXES = createField("indexes", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>_db_class.comment</code>.
     */
    public final TableField<_DbClassRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR(2048), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<_DbClassRecord, Object> PARTITION = createField("partition", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * Create a <code>_db_class</code> table reference
     */
    public _DbClass() {
        this(DSL.name("_db_class"), null);
    }

    /**
     * Create an aliased <code>_db_class</code> table reference
     */
    public _DbClass(String alias) {
        this(DSL.name(alias), _DB_CLASS);
    }

    /**
     * Create an aliased <code>_db_class</code> table reference
     */
    public _DbClass(Name alias) {
        this(alias, _DB_CLASS);
    }

    private _DbClass(Name alias, Table<_DbClassRecord> aliased) {
        this(alias, aliased, null);
    }

    private _DbClass(Name alias, Table<_DbClassRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _DbClass as(String alias) {
        return new _DbClass(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _DbClass as(Name alias) {
        return new _DbClass(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public _DbClass rename(String name) {
        return new _DbClass(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public _DbClass rename(Name name) {
        return new _DbClass(name, null);
    }
}
