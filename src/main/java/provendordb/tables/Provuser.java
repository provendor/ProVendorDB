/*
 * This file is generated by jOOQ.
*/
package provendordb.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import provendordb.DefaultSchema;
import provendordb.Keys;
import provendordb.tables.records.ProvuserRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Provuser extends TableImpl<ProvuserRecord> {

    private static final long serialVersionUID = -1941182164;

    /**
     * The reference instance of <code>provuser</code>
     */
    public static final Provuser PROVUSER = new Provuser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProvuserRecord> getRecordType() {
        return ProvuserRecord.class;
    }

    /**
     * The column <code>provuser.provuserid</code>.
     */
    public final TableField<ProvuserRecord, Integer> PROVUSERID = createField("provuserid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>provuser.provusername</code>.
     */
    public final TableField<ProvuserRecord, String> PROVUSERNAME = createField("provusername", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>provuser.provuseraadhar</code>.
     */
    public final TableField<ProvuserRecord, Integer> PROVUSERAADHAR = createField("provuseraadhar", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>provuser.provuserfirstname</code>.
     */
    public final TableField<ProvuserRecord, String> PROVUSERFIRSTNAME = createField("provuserfirstname", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>provuser.provuserlastname</code>.
     */
    public final TableField<ProvuserRecord, String> PROVUSERLASTNAME = createField("provuserlastname", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>provuser.provuserpassword</code>.
     */
    public final TableField<ProvuserRecord, String> PROVUSERPASSWORD = createField("provuserpassword", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>provuser.provuseremail</code>.
     */
    public final TableField<ProvuserRecord, String> PROVUSEREMAIL = createField("provuseremail", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>provuser.provusermobile</code>.
     */
    public final TableField<ProvuserRecord, String> PROVUSERMOBILE = createField("provusermobile", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>provuser.provusermobile2</code>.
     */
    public final TableField<ProvuserRecord, String> PROVUSERMOBILE2 = createField("provusermobile2", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>provuser.provuseraddress</code>.
     */
    public final TableField<ProvuserRecord, String> PROVUSERADDRESS = createField("provuseraddress", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>provuser.provusercity</code>.
     */
    public final TableField<ProvuserRecord, String> PROVUSERCITY = createField("provusercity", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>provuser.provuserstate</code>.
     */
    public final TableField<ProvuserRecord, String> PROVUSERSTATE = createField("provuserstate", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>provuser.provusercountry</code>.
     */
    public final TableField<ProvuserRecord, String> PROVUSERCOUNTRY = createField("provusercountry", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>provuser.provuserdivision</code>.
     */
    public final TableField<ProvuserRecord, String> PROVUSERDIVISION = createField("provuserdivision", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>provuser.provinterests</code>.
     */
    public final TableField<ProvuserRecord, String> PROVINTERESTS = createField("provinterests", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>provuser.provuserwishlist</code>.
     */
    public final TableField<ProvuserRecord, String> PROVUSERWISHLIST = createField("provuserwishlist", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>provuser.provuserrole</code>.
     */
    public final TableField<ProvuserRecord, Integer> PROVUSERROLE = createField("provuserrole", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>provuser.provuseratings</code>.
     */
    public final TableField<ProvuserRecord, Integer> PROVUSERATINGS = createField("provuseratings", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>provuser.provusernumber</code>.
     */
    public final TableField<ProvuserRecord, Integer> PROVUSERNUMBER = createField("provusernumber", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>provuser</code> table reference
     */
    public Provuser() {
        this(DSL.name("provuser"), null);
    }

    /**
     * Create an aliased <code>provuser</code> table reference
     */
    public Provuser(String alias) {
        this(DSL.name(alias), PROVUSER);
    }

    /**
     * Create an aliased <code>provuser</code> table reference
     */
    public Provuser(Name alias) {
        this(alias, PROVUSER);
    }

    private Provuser(Name alias, Table<ProvuserRecord> aliased) {
        this(alias, aliased, null);
    }

    private Provuser(Name alias, Table<ProvuserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProvuserRecord> getPrimaryKey() {
        return Keys.PROVUSER__PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProvuserRecord>> getKeys() {
        return Arrays.<UniqueKey<ProvuserRecord>>asList(Keys.PROVUSER__PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Provuser as(String alias) {
        return new Provuser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Provuser as(Name alias) {
        return new Provuser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Provuser rename(String name) {
        return new Provuser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Provuser rename(Name name) {
        return new Provuser(name, null);
    }
}
