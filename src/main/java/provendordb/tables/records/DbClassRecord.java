/*
 * This file is generated by jOOQ.
*/
package provendordb.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;

import provendordb.tables.DbClass;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbClassRecord extends TableRecordImpl<DbClassRecord> implements Record8<String, String, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1846322571;

    /**
     * Setter for <code>db_class.class_name</code>.
     */
    public void setClassName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>db_class.class_name</code>.
     */
    public String getClassName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>db_class.owner_name</code>.
     */
    public void setOwnerName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>db_class.owner_name</code>.
     */
    public String getOwnerName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>db_class.class_type</code>.
     */
    public void setClassType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>db_class.class_type</code>.
     */
    public String getClassType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>db_class.is_system_class</code>.
     */
    public void setIsSystemClass(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>db_class.is_system_class</code>.
     */
    public String getIsSystemClass() {
        return (String) get(3);
    }

    /**
     * Setter for <code>db_class.partitioned</code>.
     */
    public void setPartitioned(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>db_class.partitioned</code>.
     */
    public String getPartitioned() {
        return (String) get(4);
    }

    /**
     * Setter for <code>db_class.is_reuse_oid_class</code>.
     */
    public void setIsReuseOidClass(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>db_class.is_reuse_oid_class</code>.
     */
    public String getIsReuseOidClass() {
        return (String) get(5);
    }

    /**
     * Setter for <code>db_class.collation</code>.
     */
    public void setCollation(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>db_class.collation</code>.
     */
    public String getCollation() {
        return (String) get(6);
    }

    /**
     * Setter for <code>db_class.comment</code>.
     */
    public void setComment(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>db_class.comment</code>.
     */
    public String getComment() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, String, String, String, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return DbClass.DB_CLASS.CLASS_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return DbClass.DB_CLASS.OWNER_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return DbClass.DB_CLASS.CLASS_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return DbClass.DB_CLASS.IS_SYSTEM_CLASS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return DbClass.DB_CLASS.PARTITIONED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return DbClass.DB_CLASS.IS_REUSE_OID_CLASS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return DbClass.DB_CLASS.COLLATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return DbClass.DB_CLASS.COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getClassName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getOwnerName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getClassType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getIsSystemClass();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getPartitioned();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getIsReuseOidClass();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getCollation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getClassName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getOwnerName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getClassType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getIsSystemClass();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getPartitioned();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getIsReuseOidClass();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getCollation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbClassRecord value1(String value) {
        setClassName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbClassRecord value2(String value) {
        setOwnerName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbClassRecord value3(String value) {
        setClassType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbClassRecord value4(String value) {
        setIsSystemClass(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbClassRecord value5(String value) {
        setPartitioned(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbClassRecord value6(String value) {
        setIsReuseOidClass(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbClassRecord value7(String value) {
        setCollation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbClassRecord value8(String value) {
        setComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbClassRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DbClassRecord
     */
    public DbClassRecord() {
        super(DbClass.DB_CLASS);
    }

    /**
     * Create a detached, initialised DbClassRecord
     */
    public DbClassRecord(String className, String ownerName, String classType, String isSystemClass, String partitioned, String isReuseOidClass, String collation, String comment) {
        super(DbClass.DB_CLASS);

        set(0, className);
        set(1, ownerName);
        set(2, classType);
        set(3, isSystemClass);
        set(4, partitioned);
        set(5, isReuseOidClass);
        set(6, collation);
        set(7, comment);
    }
}
