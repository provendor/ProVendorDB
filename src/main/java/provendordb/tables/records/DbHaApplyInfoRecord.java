/*
 * This file is generated by jOOQ.
*/
package provendordb.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.impl.TableRecordImpl;

import provendordb.tables.DbHaApplyInfo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbHaApplyInfoRecord extends TableRecordImpl<DbHaApplyInfoRecord> {

    private static final long serialVersionUID = 1795785260;

    /**
     * Setter for <code>db_ha_apply_info.db_name</code>.
     */
    public void setDbName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.db_name</code>.
     */
    public String getDbName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>db_ha_apply_info.db_creation_time</code>.
     */
    public void setDbCreationTime(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.db_creation_time</code>.
     */
    public Timestamp getDbCreationTime() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>db_ha_apply_info.copied_log_path</code>.
     */
    public void setCopiedLogPath(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.copied_log_path</code>.
     */
    public String getCopiedLogPath() {
        return (String) get(2);
    }

    /**
     * Setter for <code>db_ha_apply_info.committed_lsa_pageid</code>.
     */
    public void setCommittedLsaPageid(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.committed_lsa_pageid</code>.
     */
    public Long getCommittedLsaPageid() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>db_ha_apply_info.committed_lsa_offset</code>.
     */
    public void setCommittedLsaOffset(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.committed_lsa_offset</code>.
     */
    public Integer getCommittedLsaOffset() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>db_ha_apply_info.committed_rep_pageid</code>.
     */
    public void setCommittedRepPageid(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.committed_rep_pageid</code>.
     */
    public Long getCommittedRepPageid() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>db_ha_apply_info.committed_rep_offset</code>.
     */
    public void setCommittedRepOffset(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.committed_rep_offset</code>.
     */
    public Integer getCommittedRepOffset() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>db_ha_apply_info.append_lsa_pageid</code>.
     */
    public void setAppendLsaPageid(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.append_lsa_pageid</code>.
     */
    public Long getAppendLsaPageid() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>db_ha_apply_info.append_lsa_offset</code>.
     */
    public void setAppendLsaOffset(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.append_lsa_offset</code>.
     */
    public Integer getAppendLsaOffset() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>db_ha_apply_info.eof_lsa_pageid</code>.
     */
    public void setEofLsaPageid(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.eof_lsa_pageid</code>.
     */
    public Long getEofLsaPageid() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>db_ha_apply_info.eof_lsa_offset</code>.
     */
    public void setEofLsaOffset(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.eof_lsa_offset</code>.
     */
    public Integer getEofLsaOffset() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>db_ha_apply_info.final_lsa_pageid</code>.
     */
    public void setFinalLsaPageid(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.final_lsa_pageid</code>.
     */
    public Long getFinalLsaPageid() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>db_ha_apply_info.final_lsa_offset</code>.
     */
    public void setFinalLsaOffset(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.final_lsa_offset</code>.
     */
    public Integer getFinalLsaOffset() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>db_ha_apply_info.required_lsa_pageid</code>.
     */
    public void setRequiredLsaPageid(Long value) {
        set(13, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.required_lsa_pageid</code>.
     */
    public Long getRequiredLsaPageid() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>db_ha_apply_info.required_lsa_offset</code>.
     */
    public void setRequiredLsaOffset(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.required_lsa_offset</code>.
     */
    public Integer getRequiredLsaOffset() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>db_ha_apply_info.log_record_time</code>.
     */
    public void setLogRecordTime(Timestamp value) {
        set(15, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.log_record_time</code>.
     */
    public Timestamp getLogRecordTime() {
        return (Timestamp) get(15);
    }

    /**
     * Setter for <code>db_ha_apply_info.log_commit_time</code>.
     */
    public void setLogCommitTime(Timestamp value) {
        set(16, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.log_commit_time</code>.
     */
    public Timestamp getLogCommitTime() {
        return (Timestamp) get(16);
    }

    /**
     * Setter for <code>db_ha_apply_info.last_access_time</code>.
     */
    public void setLastAccessTime(Timestamp value) {
        set(17, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.last_access_time</code>.
     */
    public Timestamp getLastAccessTime() {
        return (Timestamp) get(17);
    }

    /**
     * Setter for <code>db_ha_apply_info.status</code>.
     */
    public void setStatus(Integer value) {
        set(18, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(18);
    }

    /**
     * Setter for <code>db_ha_apply_info.insert_counter</code>.
     */
    public void setInsertCounter(Long value) {
        set(19, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.insert_counter</code>.
     */
    public Long getInsertCounter() {
        return (Long) get(19);
    }

    /**
     * Setter for <code>db_ha_apply_info.update_counter</code>.
     */
    public void setUpdateCounter(Long value) {
        set(20, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.update_counter</code>.
     */
    public Long getUpdateCounter() {
        return (Long) get(20);
    }

    /**
     * Setter for <code>db_ha_apply_info.delete_counter</code>.
     */
    public void setDeleteCounter(Long value) {
        set(21, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.delete_counter</code>.
     */
    public Long getDeleteCounter() {
        return (Long) get(21);
    }

    /**
     * Setter for <code>db_ha_apply_info.schema_counter</code>.
     */
    public void setSchemaCounter(Long value) {
        set(22, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.schema_counter</code>.
     */
    public Long getSchemaCounter() {
        return (Long) get(22);
    }

    /**
     * Setter for <code>db_ha_apply_info.commit_counter</code>.
     */
    public void setCommitCounter(Long value) {
        set(23, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.commit_counter</code>.
     */
    public Long getCommitCounter() {
        return (Long) get(23);
    }

    /**
     * Setter for <code>db_ha_apply_info.fail_counter</code>.
     */
    public void setFailCounter(Long value) {
        set(24, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.fail_counter</code>.
     */
    public Long getFailCounter() {
        return (Long) get(24);
    }

    /**
     * Setter for <code>db_ha_apply_info.start_time</code>.
     */
    public void setStartTime(Timestamp value) {
        set(25, value);
    }

    /**
     * Getter for <code>db_ha_apply_info.start_time</code>.
     */
    public Timestamp getStartTime() {
        return (Timestamp) get(25);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DbHaApplyInfoRecord
     */
    public DbHaApplyInfoRecord() {
        super(DbHaApplyInfo.DB_HA_APPLY_INFO);
    }

    /**
     * Create a detached, initialised DbHaApplyInfoRecord
     */
    public DbHaApplyInfoRecord(String dbName, Timestamp dbCreationTime, String copiedLogPath, Long committedLsaPageid, Integer committedLsaOffset, Long committedRepPageid, Integer committedRepOffset, Long appendLsaPageid, Integer appendLsaOffset, Long eofLsaPageid, Integer eofLsaOffset, Long finalLsaPageid, Integer finalLsaOffset, Long requiredLsaPageid, Integer requiredLsaOffset, Timestamp logRecordTime, Timestamp logCommitTime, Timestamp lastAccessTime, Integer status, Long insertCounter, Long updateCounter, Long deleteCounter, Long schemaCounter, Long commitCounter, Long failCounter, Timestamp startTime) {
        super(DbHaApplyInfo.DB_HA_APPLY_INFO);

        set(0, dbName);
        set(1, dbCreationTime);
        set(2, copiedLogPath);
        set(3, committedLsaPageid);
        set(4, committedLsaOffset);
        set(5, committedRepPageid);
        set(6, committedRepOffset);
        set(7, appendLsaPageid);
        set(8, appendLsaOffset);
        set(9, eofLsaPageid);
        set(10, eofLsaOffset);
        set(11, finalLsaPageid);
        set(12, finalLsaOffset);
        set(13, requiredLsaPageid);
        set(14, requiredLsaOffset);
        set(15, logRecordTime);
        set(16, logCommitTime);
        set(17, lastAccessTime);
        set(18, status);
        set(19, insertCounter);
        set(20, updateCounter);
        set(21, deleteCounter);
        set(22, schemaCounter);
        set(23, commitCounter);
        set(24, failCounter);
        set(25, startTime);
    }
}
