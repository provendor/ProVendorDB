/*
 * This file is generated by jOOQ.
*/
package provendordb.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.TableRecordImpl;

import provendordb.tables._DbIndex;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class _DbIndexRecord extends TableRecordImpl<_DbIndexRecord> implements Record11<Object, String, Integer, Integer, Object, Integer, Integer, Integer, String, Integer, String> {

    private static final long serialVersionUID = -811093893;

    /**
     * Setter for <code>_db_index.class_of</code>.
     */

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public void setClassOf(Object value) {
        set(0, value);
    }

    /**
     * Getter for <code>_db_index.class_of</code>.
     */

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public Object getClassOf() {
        return (Object) get(0);
    }

    /**
     * Setter for <code>_db_index.index_name</code>.
     */
    public void setIndexName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>_db_index.index_name</code>.
     */
    public String getIndexName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>_db_index.is_unique</code>.
     */
    public void setIsUnique(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>_db_index.is_unique</code>.
     */
    public Integer getIsUnique() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>_db_index.key_count</code>.
     */
    public void setKeyCount(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>_db_index.key_count</code>.
     */
    public Integer getKeyCount() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>_db_index.key_attrs</code>.
     */

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public void setKeyAttrs(Object value) {
        set(4, value);
    }

    /**
     * Getter for <code>_db_index.key_attrs</code>.
     */

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public Object getKeyAttrs() {
        return (Object) get(4);
    }

    /**
     * Setter for <code>_db_index.is_reverse</code>.
     */
    public void setIsReverse(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>_db_index.is_reverse</code>.
     */
    public Integer getIsReverse() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>_db_index.is_primary_key</code>.
     */
    public void setIsPrimaryKey(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>_db_index.is_primary_key</code>.
     */
    public Integer getIsPrimaryKey() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>_db_index.is_foreign_key</code>.
     */
    public void setIsForeignKey(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>_db_index.is_foreign_key</code>.
     */
    public Integer getIsForeignKey() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>_db_index.filter_expression</code>.
     */
    public void setFilterExpression(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>_db_index.filter_expression</code>.
     */
    public String getFilterExpression() {
        return (String) get(8);
    }

    /**
     * Setter for <code>_db_index.have_function</code>.
     */
    public void setHaveFunction(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>_db_index.have_function</code>.
     */
    public Integer getHaveFunction() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>_db_index.comment</code>.
     */
    public void setComment(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>_db_index.comment</code>.
     */
    public String getComment() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Object, String, Integer, Integer, Object, Integer, Integer, Integer, String, Integer, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Object, String, Integer, Integer, Object, Integer, Integer, Integer, String, Integer, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field1() {
        return _DbIndex._DB_INDEX.CLASS_OF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return _DbIndex._DB_INDEX.INDEX_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return _DbIndex._DB_INDEX.IS_UNIQUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return _DbIndex._DB_INDEX.KEY_COUNT;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field5() {
        return _DbIndex._DB_INDEX.KEY_ATTRS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return _DbIndex._DB_INDEX.IS_REVERSE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return _DbIndex._DB_INDEX.IS_PRIMARY_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return _DbIndex._DB_INDEX.IS_FOREIGN_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return _DbIndex._DB_INDEX.FILTER_EXPRESSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return _DbIndex._DB_INDEX.HAVE_FUNCTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return _DbIndex._DB_INDEX.COMMENT;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    @Override
    public Object component1() {
        return getClassOf();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getIndexName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getIsUnique();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getKeyCount();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    @Override
    public Object component5() {
        return getKeyAttrs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getIsReverse();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getIsPrimaryKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component8() {
        return getIsForeignKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getFilterExpression();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component10() {
        return getHaveFunction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getComment();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    @Override
    public Object value1() {
        return getClassOf();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getIndexName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getIsUnique();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getKeyCount();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    @Override
    public Object value5() {
        return getKeyAttrs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getIsReverse();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getIsPrimaryKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getIsForeignKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getFilterExpression();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getHaveFunction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getComment();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    @Override
    public _DbIndexRecord value1(Object value) {
        setClassOf(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _DbIndexRecord value2(String value) {
        setIndexName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _DbIndexRecord value3(Integer value) {
        setIsUnique(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _DbIndexRecord value4(Integer value) {
        setKeyCount(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    @Override
    public _DbIndexRecord value5(Object value) {
        setKeyAttrs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _DbIndexRecord value6(Integer value) {
        setIsReverse(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _DbIndexRecord value7(Integer value) {
        setIsPrimaryKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _DbIndexRecord value8(Integer value) {
        setIsForeignKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _DbIndexRecord value9(String value) {
        setFilterExpression(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _DbIndexRecord value10(Integer value) {
        setHaveFunction(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _DbIndexRecord value11(String value) {
        setComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _DbIndexRecord values(Object value1, String value2, Integer value3, Integer value4, Object value5, Integer value6, Integer value7, Integer value8, String value9, Integer value10, String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached _DbIndexRecord
     */
    public _DbIndexRecord() {
        super(_DbIndex._DB_INDEX);
    }

    /**
     * Create a detached, initialised _DbIndexRecord
     */
    public _DbIndexRecord(Object classOf, String indexName, Integer isUnique, Integer keyCount, Object keyAttrs, Integer isReverse, Integer isPrimaryKey, Integer isForeignKey, String filterExpression, Integer haveFunction, String comment) {
        super(_DbIndex._DB_INDEX);

        set(0, classOf);
        set(1, indexName);
        set(2, isUnique);
        set(3, keyCount);
        set(4, keyAttrs);
        set(5, isReverse);
        set(6, isPrimaryKey);
        set(7, isForeignKey);
        set(8, filterExpression);
        set(9, haveFunction);
        set(10, comment);
    }
}
