/*
 * This file is generated by jOOQ.
*/
package provendordb.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;

import provendordb.tables.DbCollation;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbCollationRecord extends TableRecordImpl<DbCollationRecord> implements Record7<Integer, String, String, String, String, Integer, String> {

    private static final long serialVersionUID = 1262603542;

    /**
     * Setter for <code>db_collation.coll_id</code>.
     */
    public void setCollId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>db_collation.coll_id</code>.
     */
    public Integer getCollId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>db_collation.coll_name</code>.
     */
    public void setCollName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>db_collation.coll_name</code>.
     */
    public String getCollName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>db_collation.charset_name</code>.
     */
    public void setCharsetName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>db_collation.charset_name</code>.
     */
    public String getCharsetName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>db_collation.is_builtin</code>.
     */
    public void setIsBuiltin(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>db_collation.is_builtin</code>.
     */
    public String getIsBuiltin() {
        return (String) get(3);
    }

    /**
     * Setter for <code>db_collation.has_expansions</code>.
     */
    public void setHasExpansions(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>db_collation.has_expansions</code>.
     */
    public String getHasExpansions() {
        return (String) get(4);
    }

    /**
     * Setter for <code>db_collation.contractions</code>.
     */
    public void setContractions(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>db_collation.contractions</code>.
     */
    public Integer getContractions() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>db_collation.uca_strength</code>.
     */
    public void setUcaStrength(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>db_collation.uca_strength</code>.
     */
    public String getUcaStrength() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, String, Integer, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, String, Integer, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return DbCollation.DB_COLLATION.COLL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return DbCollation.DB_COLLATION.COLL_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return DbCollation.DB_COLLATION.CHARSET_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return DbCollation.DB_COLLATION.IS_BUILTIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return DbCollation.DB_COLLATION.HAS_EXPANSIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return DbCollation.DB_COLLATION.CONTRACTIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return DbCollation.DB_COLLATION.UCA_STRENGTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getCollId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCollName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getCharsetName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getIsBuiltin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getHasExpansions();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getContractions();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getUcaStrength();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getCollId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCollName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCharsetName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getIsBuiltin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getHasExpansions();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getContractions();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getUcaStrength();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbCollationRecord value1(Integer value) {
        setCollId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbCollationRecord value2(String value) {
        setCollName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbCollationRecord value3(String value) {
        setCharsetName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbCollationRecord value4(String value) {
        setIsBuiltin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbCollationRecord value5(String value) {
        setHasExpansions(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbCollationRecord value6(Integer value) {
        setContractions(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbCollationRecord value7(String value) {
        setUcaStrength(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbCollationRecord values(Integer value1, String value2, String value3, String value4, String value5, Integer value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DbCollationRecord
     */
    public DbCollationRecord() {
        super(DbCollation.DB_COLLATION);
    }

    /**
     * Create a detached, initialised DbCollationRecord
     */
    public DbCollationRecord(Integer collId, String collName, String charsetName, String isBuiltin, String hasExpansions, Integer contractions, String ucaStrength) {
        super(DbCollation.DB_COLLATION);

        set(0, collId);
        set(1, collName);
        set(2, charsetName);
        set(3, isBuiltin);
        set(4, hasExpansions);
        set(5, contractions);
        set(6, ucaStrength);
    }
}
