/*
 * This file is generated by jOOQ.
*/
package provendordb.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.TableRecordImpl;

import provendordb.tables.DbIndex;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbIndexRecord extends TableRecordImpl<DbIndexRecord> implements Record10<String, String, String, String, Integer, String, String, String, String, String> {

    private static final long serialVersionUID = 14929075;

    /**
     * Setter for <code>db_index.index_name</code>.
     */
    public void setIndexName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>db_index.index_name</code>.
     */
    public String getIndexName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>db_index.is_unique</code>.
     */
    public void setIsUnique(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>db_index.is_unique</code>.
     */
    public String getIsUnique() {
        return (String) get(1);
    }

    /**
     * Setter for <code>db_index.is_reverse</code>.
     */
    public void setIsReverse(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>db_index.is_reverse</code>.
     */
    public String getIsReverse() {
        return (String) get(2);
    }

    /**
     * Setter for <code>db_index.class_name</code>.
     */
    public void setClassName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>db_index.class_name</code>.
     */
    public String getClassName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>db_index.key_count</code>.
     */
    public void setKeyCount(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>db_index.key_count</code>.
     */
    public Integer getKeyCount() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>db_index.is_primary_key</code>.
     */
    public void setIsPrimaryKey(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>db_index.is_primary_key</code>.
     */
    public String getIsPrimaryKey() {
        return (String) get(5);
    }

    /**
     * Setter for <code>db_index.is_foreign_key</code>.
     */
    public void setIsForeignKey(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>db_index.is_foreign_key</code>.
     */
    public String getIsForeignKey() {
        return (String) get(6);
    }

    /**
     * Setter for <code>db_index.filter_expression</code>.
     */
    public void setFilterExpression(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>db_index.filter_expression</code>.
     */
    public String getFilterExpression() {
        return (String) get(7);
    }

    /**
     * Setter for <code>db_index.have_function</code>.
     */
    public void setHaveFunction(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>db_index.have_function</code>.
     */
    public String getHaveFunction() {
        return (String) get(8);
    }

    /**
     * Setter for <code>db_index.comment</code>.
     */
    public void setComment(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>db_index.comment</code>.
     */
    public String getComment() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<String, String, String, String, Integer, String, String, String, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<String, String, String, String, Integer, String, String, String, String, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return DbIndex.DB_INDEX.INDEX_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return DbIndex.DB_INDEX.IS_UNIQUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return DbIndex.DB_INDEX.IS_REVERSE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return DbIndex.DB_INDEX.CLASS_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return DbIndex.DB_INDEX.KEY_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return DbIndex.DB_INDEX.IS_PRIMARY_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return DbIndex.DB_INDEX.IS_FOREIGN_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return DbIndex.DB_INDEX.FILTER_EXPRESSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return DbIndex.DB_INDEX.HAVE_FUNCTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return DbIndex.DB_INDEX.COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getIndexName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getIsUnique();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getIsReverse();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getClassName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getKeyCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getIsPrimaryKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getIsForeignKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getFilterExpression();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getHaveFunction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getIndexName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getIsUnique();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getIsReverse();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getClassName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getKeyCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getIsPrimaryKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getIsForeignKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getFilterExpression();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getHaveFunction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbIndexRecord value1(String value) {
        setIndexName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbIndexRecord value2(String value) {
        setIsUnique(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbIndexRecord value3(String value) {
        setIsReverse(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbIndexRecord value4(String value) {
        setClassName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbIndexRecord value5(Integer value) {
        setKeyCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbIndexRecord value6(String value) {
        setIsPrimaryKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbIndexRecord value7(String value) {
        setIsForeignKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbIndexRecord value8(String value) {
        setFilterExpression(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbIndexRecord value9(String value) {
        setHaveFunction(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbIndexRecord value10(String value) {
        setComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbIndexRecord values(String value1, String value2, String value3, String value4, Integer value5, String value6, String value7, String value8, String value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DbIndexRecord
     */
    public DbIndexRecord() {
        super(DbIndex.DB_INDEX);
    }

    /**
     * Create a detached, initialised DbIndexRecord
     */
    public DbIndexRecord(String indexName, String isUnique, String isReverse, String className, Integer keyCount, String isPrimaryKey, String isForeignKey, String filterExpression, String haveFunction, String comment) {
        super(DbIndex.DB_INDEX);

        set(0, indexName);
        set(1, isUnique);
        set(2, isReverse);
        set(3, className);
        set(4, keyCount);
        set(5, isPrimaryKey);
        set(6, isForeignKey);
        set(7, filterExpression);
        set(8, haveFunction);
        set(9, comment);
    }
}
