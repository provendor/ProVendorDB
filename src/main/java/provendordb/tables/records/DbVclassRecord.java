/*
 * This file is generated by jOOQ.
*/
package provendordb.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;

import provendordb.tables.DbVclass;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbVclassRecord extends TableRecordImpl<DbVclassRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1117768733;

    /**
     * Setter for <code>db_vclass.vclass_name</code>.
     */
    public void setVclassName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>db_vclass.vclass_name</code>.
     */
    public String getVclassName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>db_vclass.vclass_def</code>.
     */
    public void setVclassDef(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>db_vclass.vclass_def</code>.
     */
    public String getVclassDef() {
        return (String) get(1);
    }

    /**
     * Setter for <code>db_vclass.comment</code>.
     */
    public void setComment(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>db_vclass.comment</code>.
     */
    public String getComment() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return DbVclass.DB_VCLASS.VCLASS_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return DbVclass.DB_VCLASS.VCLASS_DEF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return DbVclass.DB_VCLASS.COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getVclassName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getVclassDef();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getVclassName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getVclassDef();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbVclassRecord value1(String value) {
        setVclassName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbVclassRecord value2(String value) {
        setVclassDef(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbVclassRecord value3(String value) {
        setComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbVclassRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DbVclassRecord
     */
    public DbVclassRecord() {
        super(DbVclass.DB_VCLASS);
    }

    /**
     * Create a detached, initialised DbVclassRecord
     */
    public DbVclassRecord(String vclassName, String vclassDef, String comment) {
        super(DbVclass.DB_VCLASS);

        set(0, vclassName);
        set(1, vclassDef);
        set(2, comment);
    }
}
