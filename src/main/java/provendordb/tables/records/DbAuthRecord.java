/*
 * This file is generated by jOOQ.
*/
package provendordb.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;

import provendordb.tables.DbAuth;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbAuthRecord extends TableRecordImpl<DbAuthRecord> implements Record5<String, String, String, String, String> {

    private static final long serialVersionUID = -777515368;

    /**
     * Setter for <code>db_auth.grantor_name</code>.
     */
    public void setGrantorName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>db_auth.grantor_name</code>.
     */
    public String getGrantorName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>db_auth.grantee_name</code>.
     */
    public void setGranteeName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>db_auth.grantee_name</code>.
     */
    public String getGranteeName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>db_auth.class_name</code>.
     */
    public void setClassName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>db_auth.class_name</code>.
     */
    public String getClassName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>db_auth.auth_type</code>.
     */
    public void setAuthType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>db_auth.auth_type</code>.
     */
    public String getAuthType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>db_auth.is_grantable</code>.
     */
    public void setIsGrantable(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>db_auth.is_grantable</code>.
     */
    public String getIsGrantable() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return DbAuth.DB_AUTH.GRANTOR_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return DbAuth.DB_AUTH.GRANTEE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return DbAuth.DB_AUTH.CLASS_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return DbAuth.DB_AUTH.AUTH_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return DbAuth.DB_AUTH.IS_GRANTABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getGrantorName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getGranteeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getClassName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getAuthType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getIsGrantable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getGrantorName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getGranteeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getClassName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getAuthType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getIsGrantable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbAuthRecord value1(String value) {
        setGrantorName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbAuthRecord value2(String value) {
        setGranteeName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbAuthRecord value3(String value) {
        setClassName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbAuthRecord value4(String value) {
        setAuthType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbAuthRecord value5(String value) {
        setIsGrantable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbAuthRecord values(String value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DbAuthRecord
     */
    public DbAuthRecord() {
        super(DbAuth.DB_AUTH);
    }

    /**
     * Create a detached, initialised DbAuthRecord
     */
    public DbAuthRecord(String grantorName, String granteeName, String className, String authType, String isGrantable) {
        super(DbAuth.DB_AUTH);

        set(0, grantorName);
        set(1, granteeName);
        set(2, className);
        set(3, authType);
        set(4, isGrantable);
    }
}
