/*
 * This file is generated by jOOQ.
*/
package provendordb.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;

import provendordb.tables.DbStoredProcedure;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbStoredProcedureRecord extends TableRecordImpl<DbStoredProcedureRecord> implements Record8<String, String, String, Integer, String, String, String, String> {

    private static final long serialVersionUID = -2088954047;

    /**
     * Setter for <code>db_stored_procedure.sp_name</code>.
     */
    public void setSpName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>db_stored_procedure.sp_name</code>.
     */
    public String getSpName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>db_stored_procedure.sp_type</code>.
     */
    public void setSpType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>db_stored_procedure.sp_type</code>.
     */
    public String getSpType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>db_stored_procedure.return_type</code>.
     */
    public void setReturnType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>db_stored_procedure.return_type</code>.
     */
    public String getReturnType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>db_stored_procedure.arg_count</code>.
     */
    public void setArgCount(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>db_stored_procedure.arg_count</code>.
     */
    public Integer getArgCount() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>db_stored_procedure.lang</code>.
     */
    public void setLang(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>db_stored_procedure.lang</code>.
     */
    public String getLang() {
        return (String) get(4);
    }

    /**
     * Setter for <code>db_stored_procedure.target</code>.
     */
    public void setTarget(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>db_stored_procedure.target</code>.
     */
    public String getTarget() {
        return (String) get(5);
    }

    /**
     * Setter for <code>db_stored_procedure.owner</code>.
     */
    public void setOwner(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>db_stored_procedure.owner</code>.
     */
    public String getOwner() {
        return (String) get(6);
    }

    /**
     * Setter for <code>db_stored_procedure.comment</code>.
     */
    public void setComment(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>db_stored_procedure.comment</code>.
     */
    public String getComment() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, String, String, Integer, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, String, String, Integer, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return DbStoredProcedure.DB_STORED_PROCEDURE.SP_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return DbStoredProcedure.DB_STORED_PROCEDURE.SP_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return DbStoredProcedure.DB_STORED_PROCEDURE.RETURN_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return DbStoredProcedure.DB_STORED_PROCEDURE.ARG_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return DbStoredProcedure.DB_STORED_PROCEDURE.LANG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return DbStoredProcedure.DB_STORED_PROCEDURE.TARGET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return DbStoredProcedure.DB_STORED_PROCEDURE.OWNER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return DbStoredProcedure.DB_STORED_PROCEDURE.COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getSpName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSpType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getReturnType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getArgCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getLang();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getTarget();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getOwner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getSpName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSpType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getReturnType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getArgCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getLang();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getTarget();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getOwner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbStoredProcedureRecord value1(String value) {
        setSpName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbStoredProcedureRecord value2(String value) {
        setSpType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbStoredProcedureRecord value3(String value) {
        setReturnType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbStoredProcedureRecord value4(Integer value) {
        setArgCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbStoredProcedureRecord value5(String value) {
        setLang(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbStoredProcedureRecord value6(String value) {
        setTarget(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbStoredProcedureRecord value7(String value) {
        setOwner(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbStoredProcedureRecord value8(String value) {
        setComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbStoredProcedureRecord values(String value1, String value2, String value3, Integer value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DbStoredProcedureRecord
     */
    public DbStoredProcedureRecord() {
        super(DbStoredProcedure.DB_STORED_PROCEDURE);
    }

    /**
     * Create a detached, initialised DbStoredProcedureRecord
     */
    public DbStoredProcedureRecord(String spName, String spType, String returnType, Integer argCount, String lang, String target, String owner, String comment) {
        super(DbStoredProcedure.DB_STORED_PROCEDURE);

        set(0, spName);
        set(1, spType);
        set(2, returnType);
        set(3, argCount);
        set(4, lang);
        set(5, target);
        set(6, owner);
        set(7, comment);
    }
}
