/*
 * This file is generated by jOOQ.
*/
package provendordb.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import provendordb.DefaultSchema;
import provendordb.Keys;
import provendordb.tables.records.ProvsalesorderRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Provsalesorder extends TableImpl<ProvsalesorderRecord> {

    private static final long serialVersionUID = 1573959074;

    /**
     * The reference instance of <code>provsalesorder</code>
     */
    public static final Provsalesorder PROVSALESORDER = new Provsalesorder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProvsalesorderRecord> getRecordType() {
        return ProvsalesorderRecord.class;
    }

    /**
     * The column <code>provsalesorder.provsalesorderid</code>.
     */
    public final TableField<ProvsalesorderRecord, Integer> PROVSALESORDERID = createField("provsalesorderid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>provsalesorder.provsalesordernumber</code>.
     */
    public final TableField<ProvsalesorderRecord, String> PROVSALESORDERNUMBER = createField("provsalesordernumber", org.jooq.impl.SQLDataType.VARCHAR(4096).nullable(false), this, "");

    /**
     * The column <code>provsalesorder.provsalesorderamount</code>.
     */
    public final TableField<ProvsalesorderRecord, Integer> PROVSALESORDERAMOUNT = createField("provsalesorderamount", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>provsalesorder.provsalesordergeoloc</code>.
     */
    public final TableField<ProvsalesorderRecord, String> PROVSALESORDERGEOLOC = createField("provsalesordergeoloc", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>provsalesorder.provsalesorderaddress</code>.
     */
    public final TableField<ProvsalesorderRecord, String> PROVSALESORDERADDRESS = createField("provsalesorderaddress", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>provsalesorder.provsalesorderdivision</code>.
     */
    public final TableField<ProvsalesorderRecord, String> PROVSALESORDERDIVISION = createField("provsalesorderdivision", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>provsalesorder.provsalesorderpaid</code>.
     */
    public final TableField<ProvsalesorderRecord, byte[]> PROVSALESORDERPAID = createField("provsalesorderpaid", org.jooq.impl.SQLDataType.BINARY, this, "");

    /**
     * The column <code>provsalesorder.provsalesorderuserid</code>.
     */
    public final TableField<ProvsalesorderRecord, Integer> PROVSALESORDERUSERID = createField("provsalesorderuserid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>provsalesorder</code> table reference
     */
    public Provsalesorder() {
        this(DSL.name("provsalesorder"), null);
    }

    /**
     * Create an aliased <code>provsalesorder</code> table reference
     */
    public Provsalesorder(String alias) {
        this(DSL.name(alias), PROVSALESORDER);
    }

    /**
     * Create an aliased <code>provsalesorder</code> table reference
     */
    public Provsalesorder(Name alias) {
        this(alias, PROVSALESORDER);
    }

    private Provsalesorder(Name alias, Table<ProvsalesorderRecord> aliased) {
        this(alias, aliased, null);
    }

    private Provsalesorder(Name alias, Table<ProvsalesorderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProvsalesorderRecord> getPrimaryKey() {
        return Keys.PROVSALESORDER__PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProvsalesorderRecord>> getKeys() {
        return Arrays.<UniqueKey<ProvsalesorderRecord>>asList(Keys.PROVSALESORDER__U_PROVSALESORDER_PROVSALESORDERID, Keys.PROVSALESORDER__PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ProvsalesorderRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProvsalesorderRecord, ?>>asList(Keys.PROVSALESORDER__FK_PROVSALESORDER_PROVSALESORDERUSERID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Provsalesorder as(String alias) {
        return new Provsalesorder(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Provsalesorder as(Name alias) {
        return new Provsalesorder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Provsalesorder rename(String name) {
        return new Provsalesorder(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Provsalesorder rename(Name name) {
        return new Provsalesorder(name, null);
    }
}
