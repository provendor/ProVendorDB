/*
 * This file is generated by jOOQ.
*/
package provendordb.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import provendordb.DefaultSchema;
import provendordb.tables.records.DbVclassRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbVclass extends TableImpl<DbVclassRecord> {

    private static final long serialVersionUID = -1068231623;

    /**
     * The reference instance of <code>db_vclass</code>
     */
    public static final DbVclass DB_VCLASS = new DbVclass();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DbVclassRecord> getRecordType() {
        return DbVclassRecord.class;
    }

    /**
     * The column <code>db_vclass.vclass_name</code>.
     */
    public final TableField<DbVclassRecord, String> VCLASS_NAME = createField("vclass_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>db_vclass.vclass_def</code>.
     */
    public final TableField<DbVclassRecord, String> VCLASS_DEF = createField("vclass_def", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>db_vclass.comment</code>.
     */
    public final TableField<DbVclassRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR(2048), this, "");

    /**
     * Create a <code>db_vclass</code> table reference
     */
    public DbVclass() {
        this(DSL.name("db_vclass"), null);
    }

    /**
     * Create an aliased <code>db_vclass</code> table reference
     */
    public DbVclass(String alias) {
        this(DSL.name(alias), DB_VCLASS);
    }

    /**
     * Create an aliased <code>db_vclass</code> table reference
     */
    public DbVclass(Name alias) {
        this(alias, DB_VCLASS);
    }

    private DbVclass(Name alias, Table<DbVclassRecord> aliased) {
        this(alias, aliased, null);
    }

    private DbVclass(Name alias, Table<DbVclassRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbVclass as(String alias) {
        return new DbVclass(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbVclass as(Name alias) {
        return new DbVclass(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DbVclass rename(String name) {
        return new DbVclass(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DbVclass rename(Name name) {
        return new DbVclass(name, null);
    }
}
