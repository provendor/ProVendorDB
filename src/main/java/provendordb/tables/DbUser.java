/*
 * This file is generated by jOOQ.
*/
package provendordb.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import provendordb.DefaultSchema;
import provendordb.Keys;
import provendordb.tables.records.DbUserRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbUser extends TableImpl<DbUserRecord> {

    private static final long serialVersionUID = 431002257;

    /**
     * The reference instance of <code>db_user</code>
     */
    public static final DbUser DB_USER = new DbUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DbUserRecord> getRecordType() {
        return DbUserRecord.class;
    }

    /**
     * The column <code>db_user.name</code>.
     */
    public final TableField<DbUserRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(1073741823), this, "");

    /**
     * The column <code>db_user.id</code>.
     */
    public final TableField<DbUserRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<DbUserRecord, Object> PASSWORD = createField("password", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<DbUserRecord, Object> DIRECT_GROUPS = createField("direct_groups", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<DbUserRecord, Object> GROUPS = createField("groups", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<DbUserRecord, Object> AUTHORIZATION = createField("authorization", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<DbUserRecord, Object> TRIGGERS = createField("triggers", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>db_user.comment</code>.
     */
    public final TableField<DbUserRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * Create a <code>db_user</code> table reference
     */
    public DbUser() {
        this(DSL.name("db_user"), null);
    }

    /**
     * Create an aliased <code>db_user</code> table reference
     */
    public DbUser(String alias) {
        this(DSL.name(alias), DB_USER);
    }

    /**
     * Create an aliased <code>db_user</code> table reference
     */
    public DbUser(Name alias) {
        this(alias, DB_USER);
    }

    private DbUser(Name alias, Table<DbUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private DbUser(Name alias, Table<DbUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DbUserRecord>> getKeys() {
        return Arrays.<UniqueKey<DbUserRecord>>asList(Keys.DB_USER__U_DB_USER_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbUser as(String alias) {
        return new DbUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbUser as(Name alias) {
        return new DbUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DbUser rename(String name) {
        return new DbUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DbUser rename(Name name) {
        return new DbUser(name, null);
    }
}
