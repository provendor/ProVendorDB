/*
 * This file is generated by jOOQ.
*/
package provendordb.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbHaApplyInfo implements Serializable {

    private static final long serialVersionUID = 12028214;

    private String    dbName;
    private Timestamp dbCreationTime;
    private String    copiedLogPath;
    private Long      committedLsaPageid;
    private Integer   committedLsaOffset;
    private Long      committedRepPageid;
    private Integer   committedRepOffset;
    private Long      appendLsaPageid;
    private Integer   appendLsaOffset;
    private Long      eofLsaPageid;
    private Integer   eofLsaOffset;
    private Long      finalLsaPageid;
    private Integer   finalLsaOffset;
    private Long      requiredLsaPageid;
    private Integer   requiredLsaOffset;
    private Timestamp logRecordTime;
    private Timestamp logCommitTime;
    private Timestamp lastAccessTime;
    private Integer   status;
    private Long      insertCounter;
    private Long      updateCounter;
    private Long      deleteCounter;
    private Long      schemaCounter;
    private Long      commitCounter;
    private Long      failCounter;
    private Timestamp startTime;

    public DbHaApplyInfo() {}

    public DbHaApplyInfo(DbHaApplyInfo value) {
        this.dbName = value.dbName;
        this.dbCreationTime = value.dbCreationTime;
        this.copiedLogPath = value.copiedLogPath;
        this.committedLsaPageid = value.committedLsaPageid;
        this.committedLsaOffset = value.committedLsaOffset;
        this.committedRepPageid = value.committedRepPageid;
        this.committedRepOffset = value.committedRepOffset;
        this.appendLsaPageid = value.appendLsaPageid;
        this.appendLsaOffset = value.appendLsaOffset;
        this.eofLsaPageid = value.eofLsaPageid;
        this.eofLsaOffset = value.eofLsaOffset;
        this.finalLsaPageid = value.finalLsaPageid;
        this.finalLsaOffset = value.finalLsaOffset;
        this.requiredLsaPageid = value.requiredLsaPageid;
        this.requiredLsaOffset = value.requiredLsaOffset;
        this.logRecordTime = value.logRecordTime;
        this.logCommitTime = value.logCommitTime;
        this.lastAccessTime = value.lastAccessTime;
        this.status = value.status;
        this.insertCounter = value.insertCounter;
        this.updateCounter = value.updateCounter;
        this.deleteCounter = value.deleteCounter;
        this.schemaCounter = value.schemaCounter;
        this.commitCounter = value.commitCounter;
        this.failCounter = value.failCounter;
        this.startTime = value.startTime;
    }

    public DbHaApplyInfo(
        String    dbName,
        Timestamp dbCreationTime,
        String    copiedLogPath,
        Long      committedLsaPageid,
        Integer   committedLsaOffset,
        Long      committedRepPageid,
        Integer   committedRepOffset,
        Long      appendLsaPageid,
        Integer   appendLsaOffset,
        Long      eofLsaPageid,
        Integer   eofLsaOffset,
        Long      finalLsaPageid,
        Integer   finalLsaOffset,
        Long      requiredLsaPageid,
        Integer   requiredLsaOffset,
        Timestamp logRecordTime,
        Timestamp logCommitTime,
        Timestamp lastAccessTime,
        Integer   status,
        Long      insertCounter,
        Long      updateCounter,
        Long      deleteCounter,
        Long      schemaCounter,
        Long      commitCounter,
        Long      failCounter,
        Timestamp startTime
    ) {
        this.dbName = dbName;
        this.dbCreationTime = dbCreationTime;
        this.copiedLogPath = copiedLogPath;
        this.committedLsaPageid = committedLsaPageid;
        this.committedLsaOffset = committedLsaOffset;
        this.committedRepPageid = committedRepPageid;
        this.committedRepOffset = committedRepOffset;
        this.appendLsaPageid = appendLsaPageid;
        this.appendLsaOffset = appendLsaOffset;
        this.eofLsaPageid = eofLsaPageid;
        this.eofLsaOffset = eofLsaOffset;
        this.finalLsaPageid = finalLsaPageid;
        this.finalLsaOffset = finalLsaOffset;
        this.requiredLsaPageid = requiredLsaPageid;
        this.requiredLsaOffset = requiredLsaOffset;
        this.logRecordTime = logRecordTime;
        this.logCommitTime = logCommitTime;
        this.lastAccessTime = lastAccessTime;
        this.status = status;
        this.insertCounter = insertCounter;
        this.updateCounter = updateCounter;
        this.deleteCounter = deleteCounter;
        this.schemaCounter = schemaCounter;
        this.commitCounter = commitCounter;
        this.failCounter = failCounter;
        this.startTime = startTime;
    }

    public String getDbName() {
        return this.dbName;
    }

    public void setDbName(String dbName) {
        this.dbName = dbName;
    }

    public Timestamp getDbCreationTime() {
        return this.dbCreationTime;
    }

    public void setDbCreationTime(Timestamp dbCreationTime) {
        this.dbCreationTime = dbCreationTime;
    }

    public String getCopiedLogPath() {
        return this.copiedLogPath;
    }

    public void setCopiedLogPath(String copiedLogPath) {
        this.copiedLogPath = copiedLogPath;
    }

    public Long getCommittedLsaPageid() {
        return this.committedLsaPageid;
    }

    public void setCommittedLsaPageid(Long committedLsaPageid) {
        this.committedLsaPageid = committedLsaPageid;
    }

    public Integer getCommittedLsaOffset() {
        return this.committedLsaOffset;
    }

    public void setCommittedLsaOffset(Integer committedLsaOffset) {
        this.committedLsaOffset = committedLsaOffset;
    }

    public Long getCommittedRepPageid() {
        return this.committedRepPageid;
    }

    public void setCommittedRepPageid(Long committedRepPageid) {
        this.committedRepPageid = committedRepPageid;
    }

    public Integer getCommittedRepOffset() {
        return this.committedRepOffset;
    }

    public void setCommittedRepOffset(Integer committedRepOffset) {
        this.committedRepOffset = committedRepOffset;
    }

    public Long getAppendLsaPageid() {
        return this.appendLsaPageid;
    }

    public void setAppendLsaPageid(Long appendLsaPageid) {
        this.appendLsaPageid = appendLsaPageid;
    }

    public Integer getAppendLsaOffset() {
        return this.appendLsaOffset;
    }

    public void setAppendLsaOffset(Integer appendLsaOffset) {
        this.appendLsaOffset = appendLsaOffset;
    }

    public Long getEofLsaPageid() {
        return this.eofLsaPageid;
    }

    public void setEofLsaPageid(Long eofLsaPageid) {
        this.eofLsaPageid = eofLsaPageid;
    }

    public Integer getEofLsaOffset() {
        return this.eofLsaOffset;
    }

    public void setEofLsaOffset(Integer eofLsaOffset) {
        this.eofLsaOffset = eofLsaOffset;
    }

    public Long getFinalLsaPageid() {
        return this.finalLsaPageid;
    }

    public void setFinalLsaPageid(Long finalLsaPageid) {
        this.finalLsaPageid = finalLsaPageid;
    }

    public Integer getFinalLsaOffset() {
        return this.finalLsaOffset;
    }

    public void setFinalLsaOffset(Integer finalLsaOffset) {
        this.finalLsaOffset = finalLsaOffset;
    }

    public Long getRequiredLsaPageid() {
        return this.requiredLsaPageid;
    }

    public void setRequiredLsaPageid(Long requiredLsaPageid) {
        this.requiredLsaPageid = requiredLsaPageid;
    }

    public Integer getRequiredLsaOffset() {
        return this.requiredLsaOffset;
    }

    public void setRequiredLsaOffset(Integer requiredLsaOffset) {
        this.requiredLsaOffset = requiredLsaOffset;
    }

    public Timestamp getLogRecordTime() {
        return this.logRecordTime;
    }

    public void setLogRecordTime(Timestamp logRecordTime) {
        this.logRecordTime = logRecordTime;
    }

    public Timestamp getLogCommitTime() {
        return this.logCommitTime;
    }

    public void setLogCommitTime(Timestamp logCommitTime) {
        this.logCommitTime = logCommitTime;
    }

    public Timestamp getLastAccessTime() {
        return this.lastAccessTime;
    }

    public void setLastAccessTime(Timestamp lastAccessTime) {
        this.lastAccessTime = lastAccessTime;
    }

    public Integer getStatus() {
        return this.status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }

    public Long getInsertCounter() {
        return this.insertCounter;
    }

    public void setInsertCounter(Long insertCounter) {
        this.insertCounter = insertCounter;
    }

    public Long getUpdateCounter() {
        return this.updateCounter;
    }

    public void setUpdateCounter(Long updateCounter) {
        this.updateCounter = updateCounter;
    }

    public Long getDeleteCounter() {
        return this.deleteCounter;
    }

    public void setDeleteCounter(Long deleteCounter) {
        this.deleteCounter = deleteCounter;
    }

    public Long getSchemaCounter() {
        return this.schemaCounter;
    }

    public void setSchemaCounter(Long schemaCounter) {
        this.schemaCounter = schemaCounter;
    }

    public Long getCommitCounter() {
        return this.commitCounter;
    }

    public void setCommitCounter(Long commitCounter) {
        this.commitCounter = commitCounter;
    }

    public Long getFailCounter() {
        return this.failCounter;
    }

    public void setFailCounter(Long failCounter) {
        this.failCounter = failCounter;
    }

    public Timestamp getStartTime() {
        return this.startTime;
    }

    public void setStartTime(Timestamp startTime) {
        this.startTime = startTime;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DbHaApplyInfo (");

        sb.append(dbName);
        sb.append(", ").append(dbCreationTime);
        sb.append(", ").append(copiedLogPath);
        sb.append(", ").append(committedLsaPageid);
        sb.append(", ").append(committedLsaOffset);
        sb.append(", ").append(committedRepPageid);
        sb.append(", ").append(committedRepOffset);
        sb.append(", ").append(appendLsaPageid);
        sb.append(", ").append(appendLsaOffset);
        sb.append(", ").append(eofLsaPageid);
        sb.append(", ").append(eofLsaOffset);
        sb.append(", ").append(finalLsaPageid);
        sb.append(", ").append(finalLsaOffset);
        sb.append(", ").append(requiredLsaPageid);
        sb.append(", ").append(requiredLsaOffset);
        sb.append(", ").append(logRecordTime);
        sb.append(", ").append(logCommitTime);
        sb.append(", ").append(lastAccessTime);
        sb.append(", ").append(status);
        sb.append(", ").append(insertCounter);
        sb.append(", ").append(updateCounter);
        sb.append(", ").append(deleteCounter);
        sb.append(", ").append(schemaCounter);
        sb.append(", ").append(commitCounter);
        sb.append(", ").append(failCounter);
        sb.append(", ").append(startTime);

        sb.append(")");
        return sb.toString();
    }
}
