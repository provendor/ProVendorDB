/*
 * This file is generated by jOOQ.
*/
package provendordb.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import provendordb.DefaultSchema;
import provendordb.tables.records.DbAttributeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbAttribute extends TableImpl<DbAttributeRecord> {

    private static final long serialVersionUID = -1280954886;

    /**
     * The reference instance of <code>db_attribute</code>
     */
    public static final DbAttribute DB_ATTRIBUTE = new DbAttribute();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DbAttributeRecord> getRecordType() {
        return DbAttributeRecord.class;
    }

    /**
     * The column <code>db_attribute.attr_name</code>.
     */
    public final TableField<DbAttributeRecord, String> ATTR_NAME = createField("attr_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>db_attribute.class_name</code>.
     */
    public final TableField<DbAttributeRecord, String> CLASS_NAME = createField("class_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>db_attribute.attr_type</code>.
     */
    public final TableField<DbAttributeRecord, String> ATTR_TYPE = createField("attr_type", org.jooq.impl.SQLDataType.VARCHAR(8), this, "");

    /**
     * The column <code>db_attribute.def_order</code>.
     */
    public final TableField<DbAttributeRecord, Integer> DEF_ORDER = createField("def_order", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>db_attribute.from_class_name</code>.
     */
    public final TableField<DbAttributeRecord, String> FROM_CLASS_NAME = createField("from_class_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>db_attribute.from_attr_name</code>.
     */
    public final TableField<DbAttributeRecord, String> FROM_ATTR_NAME = createField("from_attr_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>db_attribute.data_type</code>.
     */
    public final TableField<DbAttributeRecord, String> DATA_TYPE = createField("data_type", org.jooq.impl.SQLDataType.VARCHAR(9), this, "");

    /**
     * The column <code>db_attribute.prec</code>.
     */
    public final TableField<DbAttributeRecord, Integer> PREC = createField("prec", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>db_attribute.scale</code>.
     */
    public final TableField<DbAttributeRecord, Integer> SCALE = createField("scale", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>db_attribute.charset</code>.
     */
    public final TableField<DbAttributeRecord, String> CHARSET = createField("charset", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>db_attribute.collation</code>.
     */
    public final TableField<DbAttributeRecord, String> COLLATION = createField("collation", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>db_attribute.domain_class_name</code>.
     */
    public final TableField<DbAttributeRecord, String> DOMAIN_CLASS_NAME = createField("domain_class_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>db_attribute.default_value</code>.
     */
    public final TableField<DbAttributeRecord, String> DEFAULT_VALUE = createField("default_value", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>db_attribute.is_nullable</code>.
     */
    public final TableField<DbAttributeRecord, String> IS_NULLABLE = createField("is_nullable", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>db_attribute.comment</code>.
     */
    public final TableField<DbAttributeRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * Create a <code>db_attribute</code> table reference
     */
    public DbAttribute() {
        this(DSL.name("db_attribute"), null);
    }

    /**
     * Create an aliased <code>db_attribute</code> table reference
     */
    public DbAttribute(String alias) {
        this(DSL.name(alias), DB_ATTRIBUTE);
    }

    /**
     * Create an aliased <code>db_attribute</code> table reference
     */
    public DbAttribute(Name alias) {
        this(alias, DB_ATTRIBUTE);
    }

    private DbAttribute(Name alias, Table<DbAttributeRecord> aliased) {
        this(alias, aliased, null);
    }

    private DbAttribute(Name alias, Table<DbAttributeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbAttribute as(String alias) {
        return new DbAttribute(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbAttribute as(Name alias) {
        return new DbAttribute(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DbAttribute rename(String name) {
        return new DbAttribute(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DbAttribute rename(Name name) {
        return new DbAttribute(name, null);
    }
}
