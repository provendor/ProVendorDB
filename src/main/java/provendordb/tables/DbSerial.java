/*
 * This file is generated by jOOQ.
*/
package provendordb.tables;


import java.math.BigInteger;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import provendordb.DefaultSchema;
import provendordb.Keys;
import provendordb.tables.records.DbSerialRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbSerial extends TableImpl<DbSerialRecord> {

    private static final long serialVersionUID = -292214283;

    /**
     * The reference instance of <code>db_serial</code>
     */
    public static final DbSerial DB_SERIAL = new DbSerial();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DbSerialRecord> getRecordType() {
        return DbSerialRecord.class;
    }

    /**
     * The column <code>db_serial.name</code>.
     */
    public final TableField<DbSerialRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(1073741823).nullable(false), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<DbSerialRecord, Object> OWNER = createField("owner", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>db_serial.current_val</code>.
     */
    public final TableField<DbSerialRecord, BigInteger> CURRENT_VAL = createField("current_val", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(38).nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.DECIMAL_INTEGER)), this, "");

    /**
     * The column <code>db_serial.increment_val</code>.
     */
    public final TableField<DbSerialRecord, BigInteger> INCREMENT_VAL = createField("increment_val", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(38).nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.DECIMAL_INTEGER)), this, "");

    /**
     * The column <code>db_serial.max_val</code>.
     */
    public final TableField<DbSerialRecord, BigInteger> MAX_VAL = createField("max_val", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(38).nullable(false), this, "");

    /**
     * The column <code>db_serial.min_val</code>.
     */
    public final TableField<DbSerialRecord, BigInteger> MIN_VAL = createField("min_val", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(38).nullable(false), this, "");

    /**
     * The column <code>db_serial.cyclic</code>.
     */
    public final TableField<DbSerialRecord, Integer> CYCLIC = createField("cyclic", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_serial.started</code>.
     */
    public final TableField<DbSerialRecord, Integer> STARTED = createField("started", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_serial.class_name</code>.
     */
    public final TableField<DbSerialRecord, String> CLASS_NAME = createField("class_name", org.jooq.impl.SQLDataType.VARCHAR(1073741823), this, "");

    /**
     * The column <code>db_serial.att_name</code>.
     */
    public final TableField<DbSerialRecord, String> ATT_NAME = createField("att_name", org.jooq.impl.SQLDataType.VARCHAR(1073741823), this, "");

    /**
     * The column <code>db_serial.cached_num</code>.
     */
    public final TableField<DbSerialRecord, Integer> CACHED_NUM = createField("cached_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_serial.comment</code>.
     */
    public final TableField<DbSerialRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * Create a <code>db_serial</code> table reference
     */
    public DbSerial() {
        this(DSL.name("db_serial"), null);
    }

    /**
     * Create an aliased <code>db_serial</code> table reference
     */
    public DbSerial(String alias) {
        this(DSL.name(alias), DB_SERIAL);
    }

    /**
     * Create an aliased <code>db_serial</code> table reference
     */
    public DbSerial(Name alias) {
        this(alias, DB_SERIAL);
    }

    private DbSerial(Name alias, Table<DbSerialRecord> aliased) {
        this(alias, aliased, null);
    }

    private DbSerial(Name alias, Table<DbSerialRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DbSerialRecord> getPrimaryKey() {
        return Keys.DB_SERIAL__PK_DB_SERIAL_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DbSerialRecord>> getKeys() {
        return Arrays.<UniqueKey<DbSerialRecord>>asList(Keys.DB_SERIAL__PK_DB_SERIAL_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbSerial as(String alias) {
        return new DbSerial(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbSerial as(Name alias) {
        return new DbSerial(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DbSerial rename(String name) {
        return new DbSerial(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DbSerial rename(Name name) {
        return new DbSerial(name, null);
    }
}
