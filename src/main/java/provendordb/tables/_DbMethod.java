/*
 * This file is generated by jOOQ.
*/
package provendordb.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import provendordb.DefaultSchema;
import provendordb.tables.records._DbMethodRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class _DbMethod extends TableImpl<_DbMethodRecord> {

    private static final long serialVersionUID = 1358927739;

    /**
     * The reference instance of <code>_db_method</code>
     */
    public static final _DbMethod _DB_METHOD = new _DbMethod();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<_DbMethodRecord> getRecordType() {
        return _DbMethodRecord.class;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<_DbMethodRecord, Object> CLASS_OF = createField("class_of", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>_db_method.meth_name</code>.
     */
    public final TableField<_DbMethodRecord, String> METH_NAME = createField("meth_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>_db_method.meth_type</code>.
     */
    public final TableField<_DbMethodRecord, Integer> METH_TYPE = createField("meth_type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<_DbMethodRecord, Object> FROM_CLASS_OF = createField("from_class_of", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * The column <code>_db_method.from_meth_name</code>.
     */
    public final TableField<_DbMethodRecord, String> FROM_METH_NAME = createField("from_meth_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<_DbMethodRecord, Object> SIGNATURES = createField("signatures", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * Create a <code>_db_method</code> table reference
     */
    public _DbMethod() {
        this(DSL.name("_db_method"), null);
    }

    /**
     * Create an aliased <code>_db_method</code> table reference
     */
    public _DbMethod(String alias) {
        this(DSL.name(alias), _DB_METHOD);
    }

    /**
     * Create an aliased <code>_db_method</code> table reference
     */
    public _DbMethod(Name alias) {
        this(alias, _DB_METHOD);
    }

    private _DbMethod(Name alias, Table<_DbMethodRecord> aliased) {
        this(alias, aliased, null);
    }

    private _DbMethod(Name alias, Table<_DbMethodRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _DbMethod as(String alias) {
        return new _DbMethod(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _DbMethod as(Name alias) {
        return new _DbMethod(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public _DbMethod rename(String name) {
        return new _DbMethod(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public _DbMethod rename(Name name) {
        return new _DbMethod(name, null);
    }
}
