/*
 * This file is generated by jOOQ.
*/
package provendordb.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import provendordb.DefaultSchema;
import provendordb.tables.records._DbStoredProcedureArgsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class _DbStoredProcedureArgs extends TableImpl<_DbStoredProcedureArgsRecord> {

    private static final long serialVersionUID = -1346970991;

    /**
     * The reference instance of <code>_db_stored_procedure_args</code>
     */
    public static final _DbStoredProcedureArgs _DB_STORED_PROCEDURE_ARGS = new _DbStoredProcedureArgs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<_DbStoredProcedureArgsRecord> getRecordType() {
        return _DbStoredProcedureArgsRecord.class;
    }

    /**
     * The column <code>_db_stored_procedure_args.sp_name</code>.
     */
    public final TableField<_DbStoredProcedureArgsRecord, String> SP_NAME = createField("sp_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>_db_stored_procedure_args.index_of</code>.
     */
    public final TableField<_DbStoredProcedureArgsRecord, Integer> INDEX_OF = createField("index_of", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>_db_stored_procedure_args.arg_name</code>.
     */
    public final TableField<_DbStoredProcedureArgsRecord, String> ARG_NAME = createField("arg_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>_db_stored_procedure_args.data_type</code>.
     */
    public final TableField<_DbStoredProcedureArgsRecord, Integer> DATA_TYPE = createField("data_type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>_db_stored_procedure_args.mode</code>.
     */
    public final TableField<_DbStoredProcedureArgsRecord, Integer> MODE = createField("mode", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>_db_stored_procedure_args.comment</code>.
     */
    public final TableField<_DbStoredProcedureArgsRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * Create a <code>_db_stored_procedure_args</code> table reference
     */
    public _DbStoredProcedureArgs() {
        this(DSL.name("_db_stored_procedure_args"), null);
    }

    /**
     * Create an aliased <code>_db_stored_procedure_args</code> table reference
     */
    public _DbStoredProcedureArgs(String alias) {
        this(DSL.name(alias), _DB_STORED_PROCEDURE_ARGS);
    }

    /**
     * Create an aliased <code>_db_stored_procedure_args</code> table reference
     */
    public _DbStoredProcedureArgs(Name alias) {
        this(alias, _DB_STORED_PROCEDURE_ARGS);
    }

    private _DbStoredProcedureArgs(Name alias, Table<_DbStoredProcedureArgsRecord> aliased) {
        this(alias, aliased, null);
    }

    private _DbStoredProcedureArgs(Name alias, Table<_DbStoredProcedureArgsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _DbStoredProcedureArgs as(String alias) {
        return new _DbStoredProcedureArgs(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _DbStoredProcedureArgs as(Name alias) {
        return new _DbStoredProcedureArgs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public _DbStoredProcedureArgs rename(String name) {
        return new _DbStoredProcedureArgs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public _DbStoredProcedureArgs rename(Name name) {
        return new _DbStoredProcedureArgs(name, null);
    }
}
